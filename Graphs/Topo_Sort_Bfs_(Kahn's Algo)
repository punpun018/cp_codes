
    vector<int> indeg(n + 1, 0);
    for (int i = 0; i < m; i++)
    {
        int a, b;
        cin >> a >> b;
        adj[a].push_back(b);
        indeg[b]++;
    }
    queue<int> q;
    for (int i = 1; i <= n; i++)
    {
        if (indeg[i] == 0)
        {
            q.push(i);
        }
    }
    vector<int> ans;
    while (!q.empty())
    {
        int node = q.front();
        q.pop();
        ans.push_back(node);
        for (auto i : adj[node])
        {
            indeg[i]--;
            if (indeg[i] == 0)
            {
                q.push(i);
            }
        }
    }
    if (ans.size() != n)
    {
        cout << "IMPOSSIBLE" << endl;
        return;
    }
    else
    {
        for (auto i : ans)
        {
            cout << i << " ";
        }
        cout << endl;
    }
